@page "/registerRenterAccount"
@using BB.eu.Web.Services
@using BB.eu.Shared.Models
@using BB.eu.Web.Data
@inject IRenterService renterService
@inject LoginState loginState
@inject NavigationManager navigationManager


<EditForm EditContext="editContext" OnValidSubmit="HandleSubmit">
    <h3>Registrer konto</h3>
    <hr/>

    <div class="form-group row">
        <label for="firstName" class="col-sm-1 col-form-label">Fornavn</label>
        <div class="col-sm-2">
            <InputText id="firstName" class="form-control" placeholder="Jens"
                       @bind-Value="Renter.FirstName"/>
            <ValidationMessage For="() => Renter.FirstName"/>
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-1 col-form-label">Efternavn</label>
        <div class="col-sm-2">
            <InputText id="lastName" class="form-control" placeholder="Jensen"
                       @bind-Value="Renter.LastName"/>
            <ValidationMessage For="() => Renter.LastName"/>
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-1 col-form-label">Email</label>
        <div class="col-sm-2">
            <InputText id="email" class="form-control" placeholder="jens.jensen@yahoo.dk"
                       @bind-Value="Renter.Email"/>
            <ValidationMessage For="() => Renter.Email"/>
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-sm-1 col-form-label">Password</label>
        <div class="col-sm-2">
            <InputText type="password" id="password" class="form-control" placeholder="Password"
                       @bind-Value="Renter.Password"/>
            <ValidationMessage For="() => Renter.Password"/>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Registrer</button>

</EditForm>

@code {
    private Renter Renter { get; set; } = new();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(Renter);
        editContext.AddDataAnnotationsValidation();
    }

    private async Task HandleSubmit()
    {
        Renter renter = await renterService.CreateAsync(Renter);

        Console.WriteLine(renter.Id);
        Renter = new Renter();
        loginState.SetLogin(true, renter);

        navigationManager.NavigateTo("/RenterProfile");

    // throw new NotImplementedException();
        editContext.MarkAsUnmodified();
    }

}